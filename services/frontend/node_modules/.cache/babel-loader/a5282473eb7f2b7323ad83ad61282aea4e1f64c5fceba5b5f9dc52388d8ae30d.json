{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"birthday-form\"\n};\nconst _hoisted_2 = [\"max\"];\nconst _hoisted_3 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"Введите вашу дату рождения\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.birthday = $event),\n    class: \"date-input\",\n    max: $data.today\n  }, null, 8, _hoisted_2), [[_vModelText, $data.birthday]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.submitForm && $options.submitForm(...args)),\n    class: \"telegram-button\",\n    disabled: !$data.birthday\n  }, \" Продолжить \", 8, _hoisted_3)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","type","_cache","$event","$data","birthday","max","today","_hoisted_2","onClick","args","$options","submitForm","disabled","_hoisted_3"],"sources":["/Users/wiquzix/Desktop/tzrobita/src/components/BirthdayForm.vue"],"sourcesContent":["<!-- \n  Компонент BirthdayForm отображает форму для ввода даты рождения.\n  После ввода даты и нажатия кнопки \"Продолжить\" компонент отправляет событие submit с выбранной датой.\n-->\n<template>\n  <div class=\"birthday-form\">\n    <h2>Введите вашу дату рождения</h2>\n    <!-- Поле ввода даты с ограничением на будущие даты -->\n    <input \n      type=\"date\" \n      v-model=\"birthday\"\n      class=\"date-input\"\n      :max=\"today\"\n    >\n    <!-- Кнопка отправки формы, активна только если дата выбрана -->\n    <button \n      @click=\"submitForm\" \n      class=\"telegram-button\"\n      :disabled=\"!birthday\"\n    >\n      Продолжить\n    </button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'BirthdayForm',\n  data() {\n    return {\n      // Выбранная дата рождения\n      birthday: '',\n      // Текущая дата для ограничения выбора будущих дат\n      today: new Date().toISOString().split('T')[0]\n    }\n  },\n  computed: {\n    /**\n     * Проверяет валидность выбранной даты\n     * Дата считается валидной, если она выбрана и не в будущем\n     * @returns {boolean} - Результат проверки\n     */\n    isValidDate() {\n      return this.birthday && new Date(this.birthday) < new Date();\n    }\n  },\n  methods: {\n    /**\n     * Обрабатывает отправку формы\n     * Если дата валидна, отправляет событие submit с выбранной датой\n     */\n    submitForm() {\n      if (this.isValidDate) {\n        this.$emit('submit', this.birthday);\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* Контейнер формы */\n.birthday-form {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  padding: 20px;\n  background-color: var(--tg-theme-secondary-bg-color, rgba(255, 255, 255, 0.08));\n  border-radius: 12px;\n}\n\n/* Заголовок формы */\nh2 {\n  color: var(--tg-theme-text-color, #000000);\n  text-align: center;\n  margin-bottom: 10px;\n}\n\n/* Поле ввода даты */\n.date-input {\n  padding: 10px;\n  font-size: 16px;\n  border: 1px solid var(--tg-theme-hint-color, #999);\n  border-radius: 8px;\n  width: 200px;\n  background-color: var(--tg-theme-bg-color, #ffffff);\n  color: var(--tg-theme-text-color, #000000);\n}\n\n/* Кнопка в стиле Telegram */\n.telegram-button {\n  background-color: var(--tg-theme-button-color, #3390ec);\n  color: var(--tg-theme-button-text-color, #ffffff);\n  border: none;\n  padding: 12px 24px;\n  border-radius: 8px;\n  font-size: 16px;\n  cursor: pointer;\n  width: 100%;\n  max-width: 200px;\n}\n\n/* Стиль для неактивной кнопки */\n.telegram-button:disabled {\n  opacity: 0.6;\n  cursor: not-allowed;\n}\n</style> "],"mappings":";;EAKOA,KAAK,EAAC;AAAe;mBAL5B;mBAAA;;uBAKEC,mBAAA,CAiBM,OAjBNC,UAiBM,G,0BAhBJC,mBAAA,CAAmC,YAA/B,4BAA0B,Q,gBAE9BA,mBAAA,CAKC;IAJCC,IAAI,EAAC,MAAM;IATjB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAUeC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IACjBN,KAAK,EAAC,YAAY;IACjBS,GAAG,EAAEF,KAAA,CAAAG;cAZZC,UAAA,I,cAUeJ,KAAA,CAAAC,QAAQ,E,GAKnBL,mBAAA,CAMS;IALNS,OAAK,EAAAP,MAAA,QAAAA,MAAA,UAAAQ,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;IAClBb,KAAK,EAAC,iBAAiB;IACtBgB,QAAQ,GAAGT,KAAA,CAAAC;KACb,cAED,KArBJS,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}