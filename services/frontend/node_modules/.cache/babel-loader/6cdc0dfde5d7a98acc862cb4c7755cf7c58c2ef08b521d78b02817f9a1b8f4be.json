{"ast":null,"code":"export default {\n  name: 'UserInfo',\n  props: {\n    userInfo: {\n      type: Object,\n      required: true\n    },\n    birthday: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      timeLeft: {\n        days: 0,\n        hours: 0,\n        minutes: 0\n      },\n      timer: null,\n      isSharing: false,\n      error: null,\n      sharedData: null\n    };\n  },\n  computed: {\n    isValidUserInfo() {\n      return this.userInfo && typeof this.userInfo === 'object' && 'first_name' in this.userInfo;\n    },\n    currentBirthday() {\n      return this.sharedData ? this.sharedData.share.birthday : this.birthday;\n    },\n    displayUserInfo() {\n      return this.sharedData ? this.sharedData.user : this.userInfo;\n    }\n  },\n  methods: {\n    calculateTimeLeft() {\n      try {\n        const now = new Date();\n        const birthDate = new Date(this.currentBirthday);\n        const nextBirthday = new Date(now.getFullYear(), birthDate.getMonth(), birthDate.getDate());\n        if (nextBirthday < now) {\n          nextBirthday.setFullYear(now.getFullYear() + 1);\n        }\n        const diff = nextBirthday - now;\n        this.timeLeft = {\n          days: Math.floor(diff / (1000 * 60 * 60 * 24)),\n          hours: Math.floor(diff % (1000 * 60 * 60 * 24) / (1000 * 60 * 60)),\n          minutes: Math.floor(diff % (1000 * 60 * 60) / (1000 * 60))\n        };\n      } catch (error) {\n        console.error('Error calculating time left:', error);\n        this.timeLeft = {\n          days: 0,\n          hours: 0,\n          minutes: 0\n        };\n      }\n    },\n    async loadSharedData(shareId) {\n      try {\n        const response = await fetch(`/api/share/${shareId}`);\n        if (!response.ok) {\n          throw new Error('Не удалось загрузить данные');\n        }\n        this.sharedData = await response.json();\n        this.error = null;\n      } catch (error) {\n        console.error('Error loading shared data:', error);\n        this.error = `Ошибка: ${error.message}`;\n        this.sharedData = null;\n      }\n    },\n    async shareInfo() {\n      if (!window.Telegram?.WebApp) {\n        this.error = 'Telegram WebApp не доступен';\n        return;\n      }\n      const tg = window.Telegram.WebApp;\n      this.isSharing = true;\n      this.error = null;\n      try {\n        // Показываем процесс отправки\n        tg.MainButton.showProgress();\n        tg.MainButton.setText('Отправка...');\n        const shareId = Math.random().toString(36).substring(2, 15);\n        const chatId = tg.initDataUnsafe?.user?.id;\n        if (!chatId) {\n          throw new Error('Не удалось получить ID пользователя');\n        }\n\n        // Подготавливаем данные для отправки\n        const shareData = {\n          shareId: shareId,\n          data: {\n            birthday: this.birthday\n          },\n          chatId: chatId,\n          userInfo: tg.initDataUnsafe.user\n        };\n        this.error = 'Отправка данных...';\n\n        // Отправляем запрос на бэкенд через относительный путь\n        const response = await fetch('/api/share', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          body: JSON.stringify(shareData)\n        }).catch(error => {\n          throw new Error(`Ошибка сети: ${error.message}`);\n        });\n        if (!response.ok) {\n          const errorData = await response.text();\n          throw new Error(`Ошибка сервера (${response.status}): ${errorData}`);\n        }\n        this.error = 'Данные успешно отправлены';\n\n        // Закрываем приложение после успешной отправки\n        setTimeout(() => {\n          tg.close();\n        }, 1000);\n      } catch (error) {\n        this.error = `Ошибка: ${error.message}`;\n        tg.MainButton.hideProgress();\n        tg.MainButton.setText('Поделиться');\n        tg.showPopup({\n          title: 'Ошибка',\n          message: error.message || 'Не удалось отправить данные',\n          buttons: [{\n            type: 'close'\n          }]\n        });\n      } finally {\n        this.isSharing = false;\n      }\n    }\n  },\n  async mounted() {\n    // Инициализация таймера для обратного отсчета\n    this.calculateTimeLeft();\n    this.timer = setInterval(this.calculateTimeLeft, 60000);\n\n    // Настраиваем MainButton только если нет sharedData\n    if (!this.sharedData && window.Telegram?.WebApp) {\n      const tg = window.Telegram.WebApp;\n      tg.MainButton.setText('Поделиться');\n      tg.MainButton.show();\n      tg.MainButton.onClick(() => this.shareInfo());\n    }\n  },\n  beforeDestroy() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n    // Скрываем MainButton при уничтожении компонента\n    if (window.Telegram?.WebApp) {\n      window.Telegram.WebApp.MainButton.hide();\n    }\n  }\n};","map":{"version":3,"names":["name","props","userInfo","type","Object","required","birthday","String","data","timeLeft","days","hours","minutes","timer","isSharing","error","sharedData","computed","isValidUserInfo","currentBirthday","share","displayUserInfo","user","methods","calculateTimeLeft","now","Date","birthDate","nextBirthday","getFullYear","getMonth","getDate","setFullYear","diff","Math","floor","console","loadSharedData","shareId","response","fetch","ok","Error","json","message","shareInfo","window","Telegram","WebApp","tg","MainButton","showProgress","setText","random","toString","substring","chatId","initDataUnsafe","id","shareData","method","headers","body","JSON","stringify","catch","errorData","text","status","setTimeout","close","hideProgress","showPopup","title","buttons","mounted","setInterval","show","onClick","beforeDestroy","clearInterval","hide"],"sources":["/Users/wiquzix/Desktop/tzrobita/src/components/UserInfo.vue"],"sourcesContent":["<template>\n  <div class=\"user-info\">\n    <div v-if=\"!isValidUserInfo && !sharedData\" class=\"error-message\">\n      Ошибка: данные пользователя недоступны\n    </div>\n    <div v-else class=\"user-details\" :class=\"{ 'shared-info': sharedData }\">\n      <div v-if=\"error\" :class=\"['status-message', error.includes('успешно') ? 'success' : 'error']\">\n        {{ error }}\n      </div>\n      <h2>{{ sharedData ? 'Информация от пользователя' : 'Информация о пользователе' }}</h2>\n      <div class=\"info-item\">\n        <span class=\"label\">Имя:</span>\n        <span class=\"value\">{{ displayUserInfo.first_name }}</span>\n      </div>\n      <div class=\"info-item\" v-if=\"displayUserInfo.last_name\">\n        <span class=\"label\">Фамилия:</span>\n        <span class=\"value\">{{ displayUserInfo.last_name }}</span>\n      </div>\n      <div class=\"info-item\" v-if=\"displayUserInfo.username\">\n        <span class=\"label\">Username:</span>\n        <span class=\"value\">@{{ displayUserInfo.username }}</span>\n      </div>\n      <div class=\"birthday-countdown\">\n        <h3>До дня рождения осталось:</h3>\n        <div class=\"countdown-values\">\n          <div class=\"countdown-item\">\n            <span class=\"count\">{{ timeLeft.days }}</span>\n            <span class=\"unit\">дней</span>\n          </div>\n          <div class=\"countdown-item\">\n            <span class=\"count\">{{ timeLeft.hours }}</span>\n            <span class=\"unit\">часов</span>\n          </div>\n          <div class=\"countdown-item\">\n            <span class=\"count\">{{ timeLeft.minutes }}</span>\n            <span class=\"unit\">минут</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'UserInfo',\n  props: {\n    userInfo: {\n      type: Object,\n      required: true\n    },\n    birthday: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      timeLeft: {\n        days: 0,\n        hours: 0,\n        minutes: 0\n      },\n      timer: null,\n      isSharing: false,\n      error: null,\n      sharedData: null\n    }\n  },\n  computed: {\n    isValidUserInfo() {\n      return this.userInfo && typeof this.userInfo === 'object' && 'first_name' in this.userInfo;\n    },\n    currentBirthday() {\n      return this.sharedData ? this.sharedData.share.birthday : this.birthday;\n    },\n    displayUserInfo() {\n      return this.sharedData ? this.sharedData.user : this.userInfo;\n    }\n  },\n  methods: {\n    calculateTimeLeft() {\n      try {\n        const now = new Date()\n        const birthDate = new Date(this.currentBirthday)\n        const nextBirthday = new Date(now.getFullYear(), birthDate.getMonth(), birthDate.getDate())\n        \n        if (nextBirthday < now) {\n          nextBirthday.setFullYear(now.getFullYear() + 1)\n        }\n        \n        const diff = nextBirthday - now\n        \n        this.timeLeft = {\n          days: Math.floor(diff / (1000 * 60 * 60 * 24)),\n          hours: Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n          minutes: Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60))\n        }\n      } catch (error) {\n        console.error('Error calculating time left:', error);\n        this.timeLeft = { days: 0, hours: 0, minutes: 0 };\n      }\n    },\n    async loadSharedData(shareId) {\n      try {\n        const response = await fetch(`/api/share/${shareId}`);\n        if (!response.ok) {\n          throw new Error('Не удалось загрузить данные');\n        }\n        this.sharedData = await response.json();\n        this.error = null;\n      } catch (error) {\n        console.error('Error loading shared data:', error);\n        this.error = `Ошибка: ${error.message}`;\n        this.sharedData = null;\n      }\n    },\n    async shareInfo() {\n      if (!window.Telegram?.WebApp) {\n        this.error = 'Telegram WebApp не доступен';\n        return;\n      }\n\n      const tg = window.Telegram.WebApp;\n      this.isSharing = true;\n      this.error = null;\n\n      try {\n        // Показываем процесс отправки\n        tg.MainButton.showProgress();\n        tg.MainButton.setText('Отправка...');\n\n        const shareId = Math.random().toString(36).substring(2, 15);\n        const chatId = tg.initDataUnsafe?.user?.id;\n\n        if (!chatId) {\n          throw new Error('Не удалось получить ID пользователя');\n        }\n\n        // Подготавливаем данные для отправки\n        const shareData = {\n          shareId: shareId,\n          data: {\n            birthday: this.birthday\n          },\n          chatId: chatId,\n          userInfo: tg.initDataUnsafe.user\n        };\n\n        this.error = 'Отправка данных...';\n\n        // Отправляем запрос на бэкенд через относительный путь\n        const response = await fetch('/api/share', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          body: JSON.stringify(shareData)\n        }).catch(error => {\n          throw new Error(`Ошибка сети: ${error.message}`);\n        });\n\n        if (!response.ok) {\n          const errorData = await response.text();\n          throw new Error(`Ошибка сервера (${response.status}): ${errorData}`);\n        }\n\n        this.error = 'Данные успешно отправлены';\n\n        // Закрываем приложение после успешной отправки\n        setTimeout(() => {\n          tg.close();\n        }, 1000);\n\n      } catch (error) {\n        this.error = `Ошибка: ${error.message}`;\n        tg.MainButton.hideProgress();\n        tg.MainButton.setText('Поделиться');\n        \n        tg.showPopup({\n          title: 'Ошибка',\n          message: error.message || 'Не удалось отправить данные',\n          buttons: [{type: 'close'}]\n        });\n      } finally {\n        this.isSharing = false;\n      }\n    }\n  },\n  async mounted() {\n    // Инициализация таймера для обратного отсчета\n    this.calculateTimeLeft();\n    this.timer = setInterval(this.calculateTimeLeft, 60000);\n    \n    // Настраиваем MainButton только если нет sharedData\n    if (!this.sharedData && window.Telegram?.WebApp) {\n      const tg = window.Telegram.WebApp;\n      tg.MainButton.setText('Поделиться');\n      tg.MainButton.show();\n      tg.MainButton.onClick(() => this.shareInfo());\n    }\n  },\n  beforeDestroy() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n    // Скрываем MainButton при уничтожении компонента\n    if (window.Telegram?.WebApp) {\n      window.Telegram.WebApp.MainButton.hide();\n    }\n  }\n}\n</script>\n\n<style scoped>\n.user-info {\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.user-details {\n  background-color: var(--tg-theme-secondary-bg-color, rgba(255, 255, 255, 0.08));\n  padding: 20px;\n  border-radius: 12px;\n}\n\n.shared-info {\n  border: 2px solid var(--tg-theme-button-color, #3390ec);\n}\n\n.info-item {\n  margin: 10px 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.label {\n  color: var(--tg-theme-hint-color, #999);\n}\n\n.value {\n  font-weight: bold;\n}\n\n.birthday-countdown {\n  margin-top: 20px;\n  text-align: center;\n}\n\n.countdown-values {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin-top: 10px;\n}\n\n.countdown-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.count {\n  font-size: 24px;\n  font-weight: bold;\n  color: var(--tg-theme-button-color, #3390ec);\n}\n\n.unit {\n  font-size: 12px;\n  color: var(--tg-theme-hint-color, #999);\n}\n\n.telegram-button {\n  background-color: var(--tg-theme-button-color, #2481cc);\n  color: var(--tg-theme-button-text-color, #ffffff);\n  border: none;\n  padding: 12px 24px;\n  border-radius: 8px;\n  font-size: 16px;\n  cursor: pointer;\n  width: 100%;\n  transition: all 0.3s ease;\n}\n\n.telegram-button:active {\n  transform: scale(0.98);\n  opacity: 0.9;\n}\n\n.telegram-button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n  transform: none;\n}\n\n.error-message {\n  color: var(--tg-theme-destructive-text-color, #ff3b30);\n  text-align: center;\n  padding: 20px;\n  background-color: var(--tg-theme-secondary-bg-color, rgba(255, 255, 255, 0.08));\n  border-radius: 8px;\n}\n\n.status-message {\n  margin-bottom: 20px;\n  padding: 10px;\n  border-radius: 8px;\n  text-align: center;\n}\n\n.success {\n  background-color: var(--tg-theme-success-bg-color, #00c853);\n  color: var(--tg-theme-success-text-color, #ffffff);\n}\n\n.error {\n  background-color: var(--tg-theme-destructive-bg-color, #ff3b30);\n  color: var(--tg-theme-destructive-text-color, #ffffff);\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}