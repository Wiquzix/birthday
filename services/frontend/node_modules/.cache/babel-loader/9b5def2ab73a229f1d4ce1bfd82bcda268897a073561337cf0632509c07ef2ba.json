{"ast":null,"code":"export default {\n  name: 'UserInfo',\n  props: {\n    userInfo: {\n      type: Object,\n      required: true\n    },\n    birthday: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      timeLeft: {\n        days: 0,\n        hours: 0,\n        minutes: 0\n      },\n      timer: null\n    };\n  },\n  methods: {\n    calculateTimeLeft() {\n      const now = new Date();\n      const birthDate = new Date(this.birthday);\n      const nextBirthday = new Date(now.getFullYear(), birthDate.getMonth(), birthDate.getDate());\n      if (nextBirthday < now) {\n        nextBirthday.setFullYear(now.getFullYear() + 1);\n      }\n      const diff = nextBirthday - now;\n      this.timeLeft = {\n        days: Math.floor(diff / (1000 * 60 * 60 * 24)),\n        hours: Math.floor(diff % (1000 * 60 * 60 * 24) / (1000 * 60 * 60)),\n        minutes: Math.floor(diff % (1000 * 60 * 60) / (1000 * 60))\n      };\n    },\n    shareInfo() {\n      const shareData = {\n        userInfo: this.userInfo,\n        birthday: this.birthday\n      };\n      // Генерируем уникальный ID для шаринга\n      const shareId = Math.random().toString(36).substring(2, 15);\n\n      // Отправляем данные в бот\n      if (window.Telegram && window.Telegram.WebApp) {\n        window.Telegram.WebApp.sendData(JSON.stringify({\n          action: 'share',\n          shareId,\n          data: shareData\n        }));\n      }\n    }\n  },\n  mounted() {\n    this.calculateTimeLeft();\n    this.timer = setInterval(this.calculateTimeLeft, 60000); // Обновляем каждую минуту\n  },\n  beforeDestroy() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n  }\n};","map":{"version":3,"names":["name","props","userInfo","type","Object","required","birthday","String","data","timeLeft","days","hours","minutes","timer","methods","calculateTimeLeft","now","Date","birthDate","nextBirthday","getFullYear","getMonth","getDate","setFullYear","diff","Math","floor","shareInfo","shareData","shareId","random","toString","substring","window","Telegram","WebApp","sendData","JSON","stringify","action","mounted","setInterval","beforeDestroy","clearInterval"],"sources":["/Users/wiquzix/Desktop/tzrobita/src/components/UserInfo.vue"],"sourcesContent":["<template>\n  <div class=\"user-info\">\n    <div class=\"user-details\">\n      <h2>Информация о пользователе</h2>\n      <div class=\"info-item\">\n        <span class=\"label\">Имя:</span>\n        <span class=\"value\">{{ userInfo.first_name }}</span>\n      </div>\n      <div class=\"info-item\">\n        <span class=\"label\">Фамилия:</span>\n        <span class=\"value\">{{ userInfo.last_name || 'Не указана' }}</span>\n      </div>\n      <div class=\"info-item\">\n        <span class=\"label\">Username:</span>\n        <span class=\"value\">@{{ userInfo.username || 'Не указан' }}</span>\n      </div>\n      <div class=\"birthday-countdown\">\n        <h3>До дня рождения осталось:</h3>\n        <div class=\"countdown-values\">\n          <div class=\"countdown-item\">\n            <span class=\"count\">{{ timeLeft.days }}</span>\n            <span class=\"unit\">дней</span>\n          </div>\n          <div class=\"countdown-item\">\n            <span class=\"count\">{{ timeLeft.hours }}</span>\n            <span class=\"unit\">часов</span>\n          </div>\n          <div class=\"countdown-item\">\n            <span class=\"count\">{{ timeLeft.minutes }}</span>\n            <span class=\"unit\">минут</span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <button \n      @click=\"shareInfo\" \n      class=\"telegram-button\"\n    >\n      Поделиться\n    </button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'UserInfo',\n  props: {\n    userInfo: {\n      type: Object,\n      required: true\n    },\n    birthday: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      timeLeft: {\n        days: 0,\n        hours: 0,\n        minutes: 0\n      },\n      timer: null\n    }\n  },\n  methods: {\n    calculateTimeLeft() {\n      const now = new Date()\n      const birthDate = new Date(this.birthday)\n      const nextBirthday = new Date(now.getFullYear(), birthDate.getMonth(), birthDate.getDate())\n      \n      if (nextBirthday < now) {\n        nextBirthday.setFullYear(now.getFullYear() + 1)\n      }\n      \n      const diff = nextBirthday - now\n      \n      this.timeLeft = {\n        days: Math.floor(diff / (1000 * 60 * 60 * 24)),\n        hours: Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n        minutes: Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60))\n      }\n    },\n    shareInfo() {\n      const shareData = {\n        userInfo: this.userInfo,\n        birthday: this.birthday\n      }\n      // Генерируем уникальный ID для шаринга\n      const shareId = Math.random().toString(36).substring(2, 15)\n      \n      // Отправляем данные в бот\n      if (window.Telegram && window.Telegram.WebApp) {\n        window.Telegram.WebApp.sendData(JSON.stringify({\n          action: 'share',\n          shareId,\n          data: shareData\n        }))\n      }\n    }\n  },\n  mounted() {\n    this.calculateTimeLeft()\n    this.timer = setInterval(this.calculateTimeLeft, 60000) // Обновляем каждую минуту\n  },\n  beforeDestroy() {\n    if (this.timer) {\n      clearInterval(this.timer)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.user-info {\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.user-details {\n  background-color: var(--tg-theme-secondary-bg-color, rgba(255, 255, 255, 0.08));\n  padding: 20px;\n  border-radius: 12px;\n}\n\n.info-item {\n  margin: 10px 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.label {\n  color: var(--tg-theme-hint-color, #999);\n}\n\n.value {\n  font-weight: bold;\n}\n\n.birthday-countdown {\n  margin-top: 20px;\n  text-align: center;\n}\n\n.countdown-values {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin-top: 10px;\n}\n\n.countdown-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.count {\n  font-size: 24px;\n  font-weight: bold;\n  color: var(--tg-theme-button-color, #3390ec);\n}\n\n.unit {\n  font-size: 12px;\n  color: var(--tg-theme-hint-color, #999);\n}\n\n.telegram-button {\n  background-color: var(--tg-theme-button-color, #3390ec);\n  color: var(--tg-theme-button-text-color, #ffffff);\n  border: none;\n  padding: 12px 24px;\n  border-radius: 8px;\n  font-size: 16px;\n  cursor: pointer;\n  width: 100%;\n}\n</style> "],"mappings":"AA4CA,eAAe;EACbA,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE;IACLC,QAAQ,EAAE;MACRC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,QAAQ,EAAE;MACRH,IAAI,EAAEI,MAAM;MACZF,QAAQ,EAAE;IACZ;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QACRC,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE,CAAC;QACRC,OAAO,EAAE;MACX,CAAC;MACDC,KAAK,EAAE;IACT;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,iBAAiBA,CAAA,EAAG;MAClB,MAAMC,GAAE,GAAI,IAAIC,IAAI,CAAC;MACrB,MAAMC,SAAQ,GAAI,IAAID,IAAI,CAAC,IAAI,CAACX,QAAQ;MACxC,MAAMa,YAAW,GAAI,IAAIF,IAAI,CAACD,GAAG,CAACI,WAAW,CAAC,CAAC,EAAEF,SAAS,CAACG,QAAQ,CAAC,CAAC,EAAEH,SAAS,CAACI,OAAO,CAAC,CAAC;MAE1F,IAAIH,YAAW,GAAIH,GAAG,EAAE;QACtBG,YAAY,CAACI,WAAW,CAACP,GAAG,CAACI,WAAW,CAAC,IAAI,CAAC;MAChD;MAEA,MAAMI,IAAG,GAAIL,YAAW,GAAIH,GAAE;MAE9B,IAAI,CAACP,QAAO,GAAI;QACdC,IAAI,EAAEe,IAAI,CAACC,KAAK,CAACF,IAAG,IAAK,IAAG,GAAI,EAAC,GAAI,EAAC,GAAI,EAAE,CAAC,CAAC;QAC9Cb,KAAK,EAAEc,IAAI,CAACC,KAAK,CAAEF,IAAG,IAAK,IAAG,GAAI,EAAC,GAAI,EAAC,GAAI,EAAE,CAAC,IAAK,IAAG,GAAI,EAAC,GAAI,EAAE,CAAC,CAAC;QACpEZ,OAAO,EAAEa,IAAI,CAACC,KAAK,CAAEF,IAAG,IAAK,IAAG,GAAI,EAAC,GAAI,EAAE,CAAC,IAAK,IAAG,GAAI,EAAE,CAAC;MAC7D;IACF,CAAC;IACDG,SAASA,CAAA,EAAG;MACV,MAAMC,SAAQ,GAAI;QAChB1B,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBI,QAAQ,EAAE,IAAI,CAACA;MACjB;MACA;MACA,MAAMuB,OAAM,GAAIJ,IAAI,CAACK,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE;;MAE1D;MACA,IAAIC,MAAM,CAACC,QAAO,IAAKD,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;QAC7CF,MAAM,CAACC,QAAQ,CAACC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;UAC7CC,MAAM,EAAE,OAAO;UACfV,OAAO;UACPrB,IAAI,EAAEoB;QACR,CAAC,CAAC;MACJ;IACF;EACF,CAAC;EACDY,OAAOA,CAAA,EAAG;IACR,IAAI,CAACzB,iBAAiB,CAAC;IACvB,IAAI,CAACF,KAAI,GAAI4B,WAAW,CAAC,IAAI,CAAC1B,iBAAiB,EAAE,KAAK,GAAE;EAC1D,CAAC;EACD2B,aAAaA,CAAA,EAAG;IACd,IAAI,IAAI,CAAC7B,KAAK,EAAE;MACd8B,aAAa,CAAC,IAAI,CAAC9B,KAAK;IAC1B;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}