{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"user-info\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"user-details\"\n};\nconst _hoisted_4 = {\n  class: \"info-item\"\n};\nconst _hoisted_5 = {\n  class: \"value\"\n};\nconst _hoisted_6 = {\n  class: \"info-item\"\n};\nconst _hoisted_7 = {\n  class: \"value\"\n};\nconst _hoisted_8 = {\n  class: \"info-item\"\n};\nconst _hoisted_9 = {\n  class: \"value\"\n};\nconst _hoisted_10 = {\n  class: \"birthday-countdown\"\n};\nconst _hoisted_11 = {\n  class: \"countdown-values\"\n};\nconst _hoisted_12 = {\n  class: \"countdown-item\"\n};\nconst _hoisted_13 = {\n  class: \"count\"\n};\nconst _hoisted_14 = {\n  class: \"countdown-item\"\n};\nconst _hoisted_15 = {\n  class: \"count\"\n};\nconst _hoisted_16 = {\n  class: \"countdown-item\"\n};\nconst _hoisted_17 = {\n  class: \"count\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$options.isValidUserInfo ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \" Ошибка: данные пользователя недоступны \")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[7] || (_cache[7] = _createElementVNode(\"h2\", null, \"Информация о пользователе\", -1)), _createElementVNode(\"div\", _hoisted_4, [_cache[0] || (_cache[0] = _createElementVNode(\"span\", {\n    class: \"label\"\n  }, \"Имя:\", -1)), _createElementVNode(\"span\", _hoisted_5, _toDisplayString($props.userInfo.first_name), 1)]), _createElementVNode(\"div\", _hoisted_6, [_cache[1] || (_cache[1] = _createElementVNode(\"span\", {\n    class: \"label\"\n  }, \"Фамилия:\", -1)), _createElementVNode(\"span\", _hoisted_7, _toDisplayString($props.userInfo.last_name || 'Не указана'), 1)]), _createElementVNode(\"div\", _hoisted_8, [_cache[2] || (_cache[2] = _createElementVNode(\"span\", {\n    class: \"label\"\n  }, \"Username:\", -1)), _createElementVNode(\"span\", _hoisted_9, \"@\" + _toDisplayString($props.userInfo.username || 'Не указан'), 1)]), _createElementVNode(\"div\", _hoisted_10, [_cache[6] || (_cache[6] = _createElementVNode(\"h3\", null, \"До дня рождения осталось:\", -1)), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"span\", _hoisted_13, _toDisplayString($data.timeLeft.days), 1), _cache[3] || (_cache[3] = _createElementVNode(\"span\", {\n    class: \"unit\"\n  }, \"дней\", -1))]), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"span\", _hoisted_15, _toDisplayString($data.timeLeft.hours), 1), _cache[4] || (_cache[4] = _createElementVNode(\"span\", {\n    class: \"unit\"\n  }, \"часов\", -1))]), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"span\", _hoisted_17, _toDisplayString($data.timeLeft.minutes), 1), _cache[5] || (_cache[5] = _createElementVNode(\"span\", {\n    class: \"unit\"\n  }, \"минут\", -1))])])])]))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","$options","isValidUserInfo","_hoisted_2","_hoisted_3","_createElementVNode","_hoisted_4","_hoisted_5","_toDisplayString","$props","userInfo","first_name","_hoisted_6","_hoisted_7","last_name","_hoisted_8","_hoisted_9","username","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","$data","timeLeft","days","_hoisted_14","_hoisted_15","hours","_hoisted_16","_hoisted_17","minutes"],"sources":["/Users/wiquzix/Desktop/tzrobita/src/components/UserInfo.vue"],"sourcesContent":["<template>\n  <div class=\"user-info\">\n    <div v-if=\"!isValidUserInfo\" class=\"error-message\">\n      Ошибка: данные пользователя недоступны\n    </div>\n    <div v-else class=\"user-details\">\n      <h2>Информация о пользователе</h2>\n      <div class=\"info-item\">\n        <span class=\"label\">Имя:</span>\n        <span class=\"value\">{{ userInfo.first_name }}</span>\n      </div>\n      <div class=\"info-item\">\n        <span class=\"label\">Фамилия:</span>\n        <span class=\"value\">{{ userInfo.last_name || 'Не указана' }}</span>\n      </div>\n      <div class=\"info-item\">\n        <span class=\"label\">Username:</span>\n        <span class=\"value\">@{{ userInfo.username || 'Не указан' }}</span>\n      </div>\n      <div class=\"birthday-countdown\">\n        <h3>До дня рождения осталось:</h3>\n        <div class=\"countdown-values\">\n          <div class=\"countdown-item\">\n            <span class=\"count\">{{ timeLeft.days }}</span>\n            <span class=\"unit\">дней</span>\n          </div>\n          <div class=\"countdown-item\">\n            <span class=\"count\">{{ timeLeft.hours }}</span>\n            <span class=\"unit\">часов</span>\n          </div>\n          <div class=\"countdown-item\">\n            <span class=\"count\">{{ timeLeft.minutes }}</span>\n            <span class=\"unit\">минут</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'UserInfo',\n  props: {\n    userInfo: {\n      type: Object,\n      required: true\n    },\n    birthday: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      timeLeft: {\n        days: 0,\n        hours: 0,\n        minutes: 0\n      },\n      timer: null,\n      isSharing: false\n    }\n  },\n  computed: {\n    isValidUserInfo() {\n      return this.userInfo && typeof this.userInfo === 'object' && 'first_name' in this.userInfo;\n    }\n  },\n  methods: {\n    calculateTimeLeft() {\n      try {\n        const now = new Date()\n        const birthDate = new Date(this.birthday)\n        const nextBirthday = new Date(now.getFullYear(), birthDate.getMonth(), birthDate.getDate())\n        \n        if (nextBirthday < now) {\n          nextBirthday.setFullYear(now.getFullYear() + 1)\n        }\n        \n        const diff = nextBirthday - now\n        \n        this.timeLeft = {\n          days: Math.floor(diff / (1000 * 60 * 60 * 24)),\n          hours: Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n          minutes: Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60))\n        }\n      } catch (error) {\n        console.error('Error calculating time left:', error);\n        this.timeLeft = { days: 0, hours: 0, minutes: 0 };\n      }\n    },\n    async shareInfo() {\n      if (!window.Telegram?.WebApp) {\n        console.error('Telegram WebApp не доступен');\n        return;\n      }\n\n      const tg = window.Telegram.WebApp;\n      this.isSharing = true;\n\n      try {\n        // Показываем процесс отправки\n        tg.MainButton.showProgress();\n        tg.MainButton.setText('Отправка...');\n\n        const shareId = Math.random().toString(36).substring(2, 15);\n        const chatId = tg.initDataUnsafe?.user?.id;\n\n        if (!chatId) {\n          throw new Error('Не удалось получить ID пользователя');\n        }\n\n        const dataToSend = {\n          shareId: shareId,\n          data: {\n            userInfo: this.userInfo,\n            birthday: this.birthday\n          },\n          chatId: parseInt(chatId)\n        };\n\n        console.log('Отправляем данные:', dataToSend);\n        \n        // Получаем базовый URL из window.location\n        const baseUrl = window.location.origin;\n        console.log('Base URL:', baseUrl);\n        \n        // Отправляем данные на бэкенд\n        const response = await fetch(`${baseUrl}/api/share`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          body: JSON.stringify(dataToSend)\n        });\n\n        if (!response.ok) {\n          const errorData = await response.text();\n          console.error('Ошибка сервера:', errorData);\n          throw new Error(`Ошибка при отправке данных на сервер: ${errorData}`);\n        }\n\n        const result = await response.json();\n        console.log('Ответ сервера:', result);\n\n        // Показываем сообщение об успехе\n        tg.showPopup({\n          title: 'Успешно',\n          message: 'Данные отправлены, проверьте чат с ботом',\n          buttons: [{\n            type: 'close'\n          }]\n        });\n\n        // Закрываем приложение после успешной отправки\n        setTimeout(() => {\n          tg.close();\n        }, 2000);\n\n      } catch (error) {\n        console.error('Ошибка при отправке данных:', error);\n        tg.MainButton.hideProgress();\n        tg.MainButton.setText('Поделиться');\n        \n        tg.showPopup({\n          title: 'Ошибка',\n          message: error.message || 'Не удалось отправить данные',\n          buttons: [{type: 'close'}]\n        });\n      } finally {\n        this.isSharing = false;\n      }\n    }\n  },\n  mounted() {\n    if (this.isValidUserInfo) {\n      this.calculateTimeLeft();\n      this.timer = setInterval(this.calculateTimeLeft, 60000);\n      \n      // Настраиваем MainButton\n      if (window.Telegram?.WebApp) {\n        const tg = window.Telegram.WebApp;\n        tg.MainButton.setText('Поделиться');\n        tg.MainButton.show();\n        tg.MainButton.onClick(() => this.shareInfo());\n      }\n    }\n  },\n  beforeDestroy() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n    // Скрываем MainButton при уничтожении компонента\n    if (window.Telegram?.WebApp) {\n      window.Telegram.WebApp.MainButton.hide();\n    }\n  }\n}\n</script>\n\n<style scoped>\n.user-info {\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.user-details {\n  background-color: var(--tg-theme-secondary-bg-color, rgba(255, 255, 255, 0.08));\n  padding: 20px;\n  border-radius: 12px;\n}\n\n.info-item {\n  margin: 10px 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.label {\n  color: var(--tg-theme-hint-color, #999);\n}\n\n.value {\n  font-weight: bold;\n}\n\n.birthday-countdown {\n  margin-top: 20px;\n  text-align: center;\n}\n\n.countdown-values {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin-top: 10px;\n}\n\n.countdown-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.count {\n  font-size: 24px;\n  font-weight: bold;\n  color: var(--tg-theme-button-color, #3390ec);\n}\n\n.unit {\n  font-size: 12px;\n  color: var(--tg-theme-hint-color, #999);\n}\n\n.telegram-button {\n  background-color: var(--tg-theme-button-color, #2481cc);\n  color: var(--tg-theme-button-text-color, #ffffff);\n  border: none;\n  padding: 12px 24px;\n  border-radius: 8px;\n  font-size: 16px;\n  cursor: pointer;\n  width: 100%;\n  transition: all 0.3s ease;\n}\n\n.telegram-button:active {\n  transform: scale(0.98);\n  opacity: 0.9;\n}\n\n.telegram-button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n  transform: none;\n}\n\n.error-message {\n  color: var(--tg-theme-destructive-text-color, #ff3b30);\n  text-align: center;\n  padding: 20px;\n  background-color: var(--tg-theme-secondary-bg-color, rgba(255, 255, 255, 0.08));\n  border-radius: 8px;\n}\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EADxBC,GAAA;EAEiCD,KAAK,EAAC;;;EAFvCC,GAAA;EAKgBD,KAAK,EAAC;;;EAEXA,KAAK,EAAC;AAAW;;EAEdA,KAAK,EAAC;AAAO;;EAEhBA,KAAK,EAAC;AAAW;;EAEdA,KAAK,EAAC;AAAO;;EAEhBA,KAAK,EAAC;AAAW;;EAEdA,KAAK,EAAC;AAAO;;EAEhBA,KAAK,EAAC;AAAoB;;EAExBA,KAAK,EAAC;AAAkB;;EACtBA,KAAK,EAAC;AAAgB;;EACnBA,KAAK,EAAC;AAAO;;EAGhBA,KAAK,EAAC;AAAgB;;EACnBA,KAAK,EAAC;AAAO;;EAGhBA,KAAK,EAAC;AAAgB;;EACnBA,KAAK,EAAC;AAAO;;uBA9B7BE,mBAAA,CAoCM,OApCNC,UAoCM,G,CAnCQC,QAAA,CAAAC,eAAe,I,cAA3BH,mBAAA,CAEM,OAFNI,UAEM,EAF6C,0CAEnD,M,cACAJ,mBAAA,CA+BM,OA/BNK,UA+BM,G,0BA9BJC,mBAAA,CAAkC,YAA9B,2BAAyB,QAC7BA,mBAAA,CAGM,OAHNC,UAGM,G,0BAFJD,mBAAA,CAA+B;IAAzBR,KAAK,EAAC;EAAO,GAAC,MAAI,QACxBQ,mBAAA,CAAoD,QAApDE,UAAoD,EAAAC,gBAAA,CAA7BC,MAAA,CAAAC,QAAQ,CAACC,UAAU,M,GAE5CN,mBAAA,CAGM,OAHNO,UAGM,G,0BAFJP,mBAAA,CAAmC;IAA7BR,KAAK,EAAC;EAAO,GAAC,UAAQ,QAC5BQ,mBAAA,CAAmE,QAAnEQ,UAAmE,EAAAL,gBAAA,CAA5CC,MAAA,CAAAC,QAAQ,CAACI,SAAS,sB,GAE3CT,mBAAA,CAGM,OAHNU,UAGM,G,0BAFJV,mBAAA,CAAoC;IAA9BR,KAAK,EAAC;EAAO,GAAC,WAAS,QAC7BQ,mBAAA,CAAkE,QAAlEW,UAAkE,EAA9C,GAAC,GAAAR,gBAAA,CAAGC,MAAA,CAAAC,QAAQ,CAACO,QAAQ,qB,GAE3CZ,mBAAA,CAgBM,OAhBNa,WAgBM,G,0BAfJb,mBAAA,CAAkC,YAA9B,2BAAyB,QAC7BA,mBAAA,CAaM,OAbNc,WAaM,GAZJd,mBAAA,CAGM,OAHNe,WAGM,GAFJf,mBAAA,CAA8C,QAA9CgB,WAA8C,EAAAb,gBAAA,CAAvBc,KAAA,CAAAC,QAAQ,CAACC,IAAI,O,0BACpCnB,mBAAA,CAA8B;IAAxBR,KAAK,EAAC;EAAM,GAAC,MAAI,O,GAEzBQ,mBAAA,CAGM,OAHNoB,WAGM,GAFJpB,mBAAA,CAA+C,QAA/CqB,WAA+C,EAAAlB,gBAAA,CAAxBc,KAAA,CAAAC,QAAQ,CAACI,KAAK,O,0BACrCtB,mBAAA,CAA+B;IAAzBR,KAAK,EAAC;EAAM,GAAC,OAAK,O,GAE1BQ,mBAAA,CAGM,OAHNuB,WAGM,GAFJvB,mBAAA,CAAiD,QAAjDwB,WAAiD,EAAArB,gBAAA,CAA1Bc,KAAA,CAAAC,QAAQ,CAACO,OAAO,O,0BACvCzB,mBAAA,CAA+B;IAAzBR,KAAK,EAAC;EAAM,GAAC,OAAK,O","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}