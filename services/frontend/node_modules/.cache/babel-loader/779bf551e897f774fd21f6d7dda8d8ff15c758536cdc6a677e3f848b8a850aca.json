{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"user-info\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_3 = {\n  class: \"info-item\"\n};\nconst _hoisted_4 = {\n  class: \"value\"\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"info-item\"\n};\nconst _hoisted_6 = {\n  class: \"value\"\n};\nconst _hoisted_7 = {\n  key: 2,\n  class: \"info-item\"\n};\nconst _hoisted_8 = {\n  class: \"value\"\n};\nconst _hoisted_9 = {\n  class: \"birthday-countdown\"\n};\nconst _hoisted_10 = {\n  class: \"countdown-values\"\n};\nconst _hoisted_11 = {\n  class: \"countdown-item\"\n};\nconst _hoisted_12 = {\n  class: \"count\"\n};\nconst _hoisted_13 = {\n  class: \"countdown-item\"\n};\nconst _hoisted_14 = {\n  class: \"count\"\n};\nconst _hoisted_15 = {\n  class: \"countdown-item\"\n};\nconst _hoisted_16 = {\n  class: \"count\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$options.isValidUserInfo && !$data.sharedData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \" Ошибка: данные пользователя недоступны \")) : (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: _normalizeClass([\"user-details\", {\n      'shared-info': $data.sharedData\n    }])\n  }, [$data.error ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass(['status-message', $data.error.includes('успешно') ? 'success' : 'error'])\n  }, _toDisplayString($data.error), 3)) : _createCommentVNode(\"\", true), _createElementVNode(\"h2\", null, _toDisplayString($data.sharedData ? 'Информация от пользователя' : 'Информация о пользователе'), 1), _createElementVNode(\"div\", _hoisted_3, [_cache[0] || (_cache[0] = _createElementVNode(\"span\", {\n    class: \"label\"\n  }, \"Имя:\", -1)), _createElementVNode(\"span\", _hoisted_4, _toDisplayString($options.displayUserInfo.first_name), 1)]), $options.displayUserInfo.last_name ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_cache[1] || (_cache[1] = _createElementVNode(\"span\", {\n    class: \"label\"\n  }, \"Фамилия:\", -1)), _createElementVNode(\"span\", _hoisted_6, _toDisplayString($options.displayUserInfo.last_name), 1)])) : _createCommentVNode(\"\", true), $options.displayUserInfo.username ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_cache[2] || (_cache[2] = _createElementVNode(\"span\", {\n    class: \"label\"\n  }, \"Username:\", -1)), _createElementVNode(\"span\", _hoisted_8, \"@\" + _toDisplayString($options.displayUserInfo.username), 1)])) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", _hoisted_9, [_cache[6] || (_cache[6] = _createElementVNode(\"h3\", null, \"До дня рождения осталось:\", -1)), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"span\", _hoisted_12, _toDisplayString($data.timeLeft.days), 1), _cache[3] || (_cache[3] = _createElementVNode(\"span\", {\n    class: \"unit\"\n  }, \"дней\", -1))]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"span\", _hoisted_14, _toDisplayString($data.timeLeft.hours), 1), _cache[4] || (_cache[4] = _createElementVNode(\"span\", {\n    class: \"unit\"\n  }, \"часов\", -1))]), _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"span\", _hoisted_16, _toDisplayString($data.timeLeft.minutes), 1), _cache[5] || (_cache[5] = _createElementVNode(\"span\", {\n    class: \"unit\"\n  }, \"минут\", -1))])])])], 2))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","$options","isValidUserInfo","$data","sharedData","_hoisted_2","_normalizeClass","error","includes","_createCommentVNode","_createElementVNode","_toDisplayString","_hoisted_3","_hoisted_4","displayUserInfo","first_name","last_name","_hoisted_5","_hoisted_6","username","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","timeLeft","days","_hoisted_13","_hoisted_14","hours","_hoisted_15","_hoisted_16","minutes"],"sources":["/Users/wiquzix/Desktop/tzrobita/src/components/UserInfo.vue"],"sourcesContent":["<template>\n  <div class=\"user-info\">\n    <div v-if=\"!isValidUserInfo && !sharedData\" class=\"error-message\">\n      Ошибка: данные пользователя недоступны\n    </div>\n    <div v-else class=\"user-details\" :class=\"{ 'shared-info': sharedData }\">\n      <div v-if=\"error\" :class=\"['status-message', error.includes('успешно') ? 'success' : 'error']\">\n        {{ error }}\n      </div>\n      <h2>{{ sharedData ? 'Информация от пользователя' : 'Информация о пользователе' }}</h2>\n      <div class=\"info-item\">\n        <span class=\"label\">Имя:</span>\n        <span class=\"value\">{{ displayUserInfo.first_name }}</span>\n      </div>\n      <div class=\"info-item\" v-if=\"displayUserInfo.last_name\">\n        <span class=\"label\">Фамилия:</span>\n        <span class=\"value\">{{ displayUserInfo.last_name }}</span>\n      </div>\n      <div class=\"info-item\" v-if=\"displayUserInfo.username\">\n        <span class=\"label\">Username:</span>\n        <span class=\"value\">@{{ displayUserInfo.username }}</span>\n      </div>\n      <div class=\"birthday-countdown\">\n        <h3>До дня рождения осталось:</h3>\n        <div class=\"countdown-values\">\n          <div class=\"countdown-item\">\n            <span class=\"count\">{{ timeLeft.days }}</span>\n            <span class=\"unit\">дней</span>\n          </div>\n          <div class=\"countdown-item\">\n            <span class=\"count\">{{ timeLeft.hours }}</span>\n            <span class=\"unit\">часов</span>\n          </div>\n          <div class=\"countdown-item\">\n            <span class=\"count\">{{ timeLeft.minutes }}</span>\n            <span class=\"unit\">минут</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'UserInfo',\n  props: {\n    userInfo: {\n      type: Object,\n      required: true\n    },\n    birthday: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      timeLeft: {\n        days: 0,\n        hours: 0,\n        minutes: 0\n      },\n      timer: null,\n      isSharing: false,\n      error: null,\n      sharedData: null\n    }\n  },\n  computed: {\n    isValidUserInfo() {\n      return this.userInfo && typeof this.userInfo === 'object' && 'first_name' in this.userInfo;\n    },\n    currentBirthday() {\n      return this.sharedData ? this.sharedData.share.birthday : this.birthday;\n    },\n    displayUserInfo() {\n      return this.sharedData ? this.sharedData.user : this.userInfo;\n    }\n  },\n  methods: {\n    calculateTimeLeft() {\n      try {\n        const now = new Date()\n        const birthDate = new Date(this.currentBirthday)\n        const nextBirthday = new Date(now.getFullYear(), birthDate.getMonth(), birthDate.getDate())\n        \n        if (nextBirthday < now) {\n          nextBirthday.setFullYear(now.getFullYear() + 1)\n        }\n        \n        const diff = nextBirthday - now\n        \n        this.timeLeft = {\n          days: Math.floor(diff / (1000 * 60 * 60 * 24)),\n          hours: Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n          minutes: Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60))\n        }\n      } catch (error) {\n        console.error('Error calculating time left:', error);\n        this.timeLeft = { days: 0, hours: 0, minutes: 0 };\n      }\n    },\n    async loadSharedData(shareId) {\n      try {\n        const response = await fetch(`/api/share/${shareId}`);\n        if (!response.ok) {\n          throw new Error('Не удалось загрузить данные');\n        }\n        this.sharedData = await response.json();\n        this.error = null;\n      } catch (error) {\n        console.error('Error loading shared data:', error);\n        this.error = `Ошибка: ${error.message}`;\n        this.sharedData = null;\n      }\n    },\n    async shareInfo() {\n      if (!window.Telegram?.WebApp) {\n        this.error = 'Telegram WebApp не доступен';\n        return;\n      }\n\n      const tg = window.Telegram.WebApp;\n      this.isSharing = true;\n      this.error = null;\n\n      try {\n        // Показываем процесс отправки\n        tg.MainButton.showProgress();\n        tg.MainButton.setText('Отправка...');\n\n        const shareId = Math.random().toString(36).substring(2, 15);\n        const chatId = tg.initDataUnsafe?.user?.id;\n\n        if (!chatId) {\n          throw new Error('Не удалось получить ID пользователя');\n        }\n\n        // Подготавливаем данные для отправки\n        const shareData = {\n          shareId: shareId,\n          data: {\n            birthday: this.birthday\n          },\n          chatId: chatId,\n          userInfo: tg.initDataUnsafe.user\n        };\n\n        this.error = 'Отправка данных...';\n\n        // Отправляем запрос на бэкенд через относительный путь\n        const response = await fetch('/api/share', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          body: JSON.stringify(shareData)\n        }).catch(error => {\n          throw new Error(`Ошибка сети: ${error.message}`);\n        });\n\n        if (!response.ok) {\n          const errorData = await response.text();\n          throw new Error(`Ошибка сервера (${response.status}): ${errorData}`);\n        }\n\n        // Успешная отправка\n        this.error = 'Данные успешно отправлены';\n        tg.MainButton.hideProgress();\n        \n        // Показываем уведомление об успехе\n        tg.showPopup({\n          title: 'Успех',\n          message: 'Данные успешно отправлены. Ссылка для шаринга отправлена в чат.',\n          buttons: [{type: 'close'}]\n        });\n\n        // Закрываем приложение после успешной отправки\n        setTimeout(() => {\n          tg.close();\n        }, 1000);\n\n      } catch (error) {\n        // Обработка ошибки\n        this.error = `Ошибка: ${error.message}`;\n        tg.MainButton.hideProgress();\n        tg.MainButton.setText('Поделиться');\n        \n        // Показываем уведомление об ошибке\n        tg.showPopup({\n          title: 'Ошибка',\n          message: error.message || 'Не удалось отправить данные',\n          buttons: [{type: 'close'}]\n        });\n      } finally {\n        this.isSharing = false;\n      }\n    }\n  },\n  async mounted() {\n    // Инициализация таймера для обратного отсчета\n    this.calculateTimeLeft();\n    this.timer = setInterval(this.calculateTimeLeft, 60000);\n    \n    // Настраиваем MainButton только если нет sharedData\n    if (!this.sharedData && window.Telegram?.WebApp) {\n      const tg = window.Telegram.WebApp;\n      tg.MainButton.setText('Поделиться');\n      tg.MainButton.show();\n      tg.MainButton.onClick(() => this.shareInfo());\n    }\n  },\n  beforeDestroy() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n    // Скрываем MainButton при уничтожении компонента\n    if (window.Telegram?.WebApp) {\n      window.Telegram.WebApp.MainButton.hide();\n    }\n  }\n}\n</script>\n\n<style scoped>\n.user-info {\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.user-details {\n  background-color: var(--tg-theme-secondary-bg-color, rgba(255, 255, 255, 0.08));\n  padding: 20px;\n  border-radius: 12px;\n}\n\n.shared-info {\n  border: 2px solid var(--tg-theme-button-color, #3390ec);\n}\n\n.status-message {\n  margin-bottom: 20px;\n  padding: 10px;\n  border-radius: 8px;\n  text-align: center;\n  font-size: 14px;\n  max-width: 100%;\n  word-wrap: break-word;\n}\n\n.success {\n  background-color: rgba(0, 200, 83, 0.2);\n  color: var(--tg-theme-text-color, #000000);\n  border: 1px solid var(--tg-theme-button-color, #3390ec);\n}\n\n.error {\n  background-color: rgba(255, 59, 48, 0.2);\n  color: var(--tg-theme-text-color, #000000);\n  border: 1px solid var(--tg-theme-destructive-text-color, #ff3b30);\n}\n\n.error-message {\n  color: var(--tg-theme-destructive-text-color, #ff3b30);\n  text-align: center;\n  padding: 20px;\n  background-color: var(--tg-theme-secondary-bg-color, rgba(255, 255, 255, 0.08));\n  border-radius: 8px;\n  font-size: 14px;\n  max-width: 100%;\n}\n\n.info-item {\n  margin: 10px 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.label {\n  color: var(--tg-theme-hint-color, #999);\n}\n\n.value {\n  font-weight: bold;\n}\n\n.birthday-countdown {\n  margin-top: 20px;\n  text-align: center;\n}\n\n.countdown-values {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin-top: 10px;\n}\n\n.countdown-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.count {\n  font-size: 24px;\n  font-weight: bold;\n  color: var(--tg-theme-button-color, #3390ec);\n}\n\n.unit {\n  font-size: 12px;\n  color: var(--tg-theme-hint-color, #999);\n}\n\n.telegram-button {\n  background-color: var(--tg-theme-button-color, #2481cc);\n  color: var(--tg-theme-button-text-color, #ffffff);\n  border: none;\n  padding: 12px 24px;\n  border-radius: 8px;\n  font-size: 16px;\n  cursor: pointer;\n  width: 100%;\n  transition: all 0.3s ease;\n}\n\n.telegram-button:active {\n  transform: scale(0.98);\n  opacity: 0.9;\n}\n\n.telegram-button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n  transform: none;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}