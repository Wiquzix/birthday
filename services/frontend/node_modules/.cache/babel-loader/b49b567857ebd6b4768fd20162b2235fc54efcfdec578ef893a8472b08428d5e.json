{"ast":null,"code":"import BirthdayForm from './components/BirthdayForm.vue';\nimport UserInfo from './components/UserInfo.vue';\nexport default {\n  name: 'App',\n  components: {\n    BirthdayForm,\n    UserInfo\n  },\n  data() {\n    return {\n      userInfo: {},\n      birthday: '',\n      birthdaySet: false,\n      loading: true,\n      error: null,\n      sharedMode: false,\n      backgroundColor: '#ffffff',\n      isValidWebApp: false,\n      tg: null\n    };\n  },\n  methods: {\n    setBirthday(date) {\n      this.birthday = date;\n      this.birthdaySet = true;\n    },\n    async checkForSharedData() {\n      // Проверяем наличие параметра share_id в URL или в startapp\n      const tg = window.Telegram?.WebApp;\n      let shareId = null;\n      console.log(\"App: Проверка параметров запуска\");\n      if (tg?.initDataUnsafe?.start_param) {\n        const startParam = tg.initDataUnsafe.start_param;\n        console.log(\"App: Получен start_param:\", startParam);\n        if (startParam.startsWith('share_')) {\n          shareId = startParam.substring(6);\n        }\n      } else {\n        const urlParams = new URLSearchParams(window.location.search);\n        shareId = urlParams.get('share_id');\n      }\n\n      // Дополнительная проверка для startapp в URL\n      if (!shareId && window.location.href.includes('startapp=')) {\n        const match = window.location.href.match(/startapp=share_([^&]+)/);\n        if (match && match[1]) {\n          shareId = match[1];\n        }\n      }\n      if (shareId) {\n        console.log(\"App: Найден shareId:\", shareId);\n        try {\n          const response = await fetch(`/api/share/${shareId}`);\n          if (!response.ok) {\n            throw new Error('Не удалось загрузить данные');\n          }\n          const data = await response.json();\n          console.log(\"App: Загружены данные:\", data);\n\n          // Устанавливаем данные из шаринга\n          this.userInfo = data.user;\n          this.birthday = data.share.birthday;\n          this.birthdaySet = true;\n          this.sharedMode = true;\n        } catch (error) {\n          console.error(\"App: Ошибка при загрузке данных:\", error);\n          this.error = `Ошибка: ${error.message}`;\n        }\n      } else {\n        console.log(\"App: shareId не найден, показываем стандартный интерфейс\");\n      }\n    }\n  },\n  async mounted() {\n    try {\n      // Инициализация Telegram WebApp\n      const tg = window.Telegram?.WebApp;\n      if (tg) {\n        this.tg = tg;\n        this.isValidWebApp = true;\n\n        // Инициализация Telegram Web App\n        tg.ready();\n        tg.expand();\n\n        // Используем цвет темы из Telegram\n        this.backgroundColor = tg.backgroundColor || '#ffffff';\n      }\n\n      // Проверяем наличие данных из шаринга\n      await this.checkForSharedData();\n\n      // Если не в режиме шаринга, получаем данные пользователя из Telegram\n      if (!this.sharedMode) {\n        if (tg) {\n          this.userInfo = tg.initDataUnsafe?.user || {};\n        } else {\n          console.warn('Telegram WebApp не доступен');\n          // Для тестирования без Telegram\n          this.userInfo = {\n            first_name: 'Тестовый',\n            last_name: 'Пользователь',\n            username: 'test_user'\n          };\n        }\n      }\n      this.loading = false;\n    } catch (error) {\n      console.error('Ошибка при инициализации:', error);\n      this.error = `Ошибка: ${error.message}`;\n      this.loading = false;\n    }\n  }\n};","map":{"version":3,"names":["BirthdayForm","UserInfo","name","components","data","userInfo","birthday","birthdaySet","loading","error","sharedMode","backgroundColor","isValidWebApp","tg","methods","setBirthday","date","checkForSharedData","window","Telegram","WebApp","shareId","console","log","initDataUnsafe","start_param","startParam","startsWith","substring","urlParams","URLSearchParams","location","search","get","href","includes","match","response","fetch","ok","Error","json","user","share","message","mounted","ready","expand","warn","first_name","last_name","username"],"sources":["/Users/wiquzix/Desktop/tzrobita/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\" :style=\"{ backgroundColor: backgroundColor }\">\n    <div v-if=\"loading\" class=\"loading\">\n      Загрузка...\n    </div>\n    <div v-else-if=\"error\" class=\"error\">\n      {{ error }}\n    </div>\n    <div v-else-if=\"sharedMode\" class=\"shared-mode\">\n      <UserInfo :userInfo=\"userInfo\" :birthday=\"birthday\" />\n    </div>\n    <div v-else-if=\"!birthdaySet\">\n      <BirthdayForm @submit=\"setBirthday\" />\n    </div>\n    <div v-else>\n      <UserInfo :userInfo=\"userInfo\" :birthday=\"birthday\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport BirthdayForm from './components/BirthdayForm.vue'\nimport UserInfo from './components/UserInfo.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    BirthdayForm,\n    UserInfo\n  },\n  data() {\n    return {\n      userInfo: {},\n      birthday: '',\n      birthdaySet: false,\n      loading: true,\n      error: null,\n      sharedMode: false,\n      backgroundColor: '#ffffff',\n      isValidWebApp: false,\n      tg: null\n    }\n  },\n  methods: {\n    setBirthday(date) {\n      this.birthday = date;\n      this.birthdaySet = true;\n    },\n    async checkForSharedData() {\n      // Проверяем наличие параметра share_id в URL или в startapp\n      const tg = window.Telegram?.WebApp;\n      let shareId = null;\n      \n      console.log(\"App: Проверка параметров запуска\");\n      \n      if (tg?.initDataUnsafe?.start_param) {\n        const startParam = tg.initDataUnsafe.start_param;\n        console.log(\"App: Получен start_param:\", startParam);\n        \n        if (startParam.startsWith('share_')) {\n          shareId = startParam.substring(6);\n        }\n      } else {\n        const urlParams = new URLSearchParams(window.location.search);\n        shareId = urlParams.get('share_id');\n      }\n      \n      // Дополнительная проверка для startapp в URL\n      if (!shareId && window.location.href.includes('startapp=')) {\n        const match = window.location.href.match(/startapp=share_([^&]+)/);\n        if (match && match[1]) {\n          shareId = match[1];\n        }\n      }\n      \n      if (shareId) {\n        console.log(\"App: Найден shareId:\", shareId);\n        try {\n          const response = await fetch(`/api/share/${shareId}`);\n          if (!response.ok) {\n            throw new Error('Не удалось загрузить данные');\n          }\n          \n          const data = await response.json();\n          console.log(\"App: Загружены данные:\", data);\n          \n          // Устанавливаем данные из шаринга\n          this.userInfo = data.user;\n          this.birthday = data.share.birthday;\n          this.birthdaySet = true;\n          this.sharedMode = true;\n        } catch (error) {\n          console.error(\"App: Ошибка при загрузке данных:\", error);\n          this.error = `Ошибка: ${error.message}`;\n        }\n      } else {\n        console.log(\"App: shareId не найден, показываем стандартный интерфейс\");\n      }\n    }\n  },\n  async mounted() {\n    try {\n      // Инициализация Telegram WebApp\n      const tg = window.Telegram?.WebApp;\n      if (tg) {\n        this.tg = tg;\n        this.isValidWebApp = true;\n        \n        // Инициализация Telegram Web App\n        tg.ready();\n        tg.expand();\n        \n        // Используем цвет темы из Telegram\n        this.backgroundColor = tg.backgroundColor || '#ffffff';\n      }\n      \n      // Проверяем наличие данных из шаринга\n      await this.checkForSharedData();\n      \n      // Если не в режиме шаринга, получаем данные пользователя из Telegram\n      if (!this.sharedMode) {\n        if (tg) {\n          this.userInfo = tg.initDataUnsafe?.user || {};\n        } else {\n          console.warn('Telegram WebApp не доступен');\n          // Для тестирования без Telegram\n          this.userInfo = {\n            first_name: 'Тестовый',\n            last_name: 'Пользователь',\n            username: 'test_user'\n          };\n        }\n      }\n      \n      this.loading = false;\n    } catch (error) {\n      console.error('Ошибка при инициализации:', error);\n      this.error = `Ошибка: ${error.message}`;\n      this.loading = false;\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Roboto', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: var(--tg-theme-text-color, #000000);\n  background-color: var(--tg-theme-bg-color, #ffffff);\n  min-height: 100vh;\n  padding: 16px;\n}\n\n.loading, .error {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  text-align: center;\n  padding: 20px;\n}\n\n.error {\n  color: var(--tg-theme-destructive-text-color, #ff3b30);\n}\n\n.shared-mode {\n  padding: 10px;\n}\n\nh2 {\n  color: var(--tg-theme-text-color, #000000);\n  text-align: center;\n  margin-bottom: 20px;\n}\n</style>\n  \n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}